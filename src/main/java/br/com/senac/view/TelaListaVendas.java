package br.com.senac.view;

import br.com.senac.controller.VendasCtrl;
import br.com.senac.model.Usuario;
import br.com.senac.model.dto.RegistroDTO;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaListaVendas extends javax.swing.JFrame {

    private final Usuario usuarioAutenticado;
    private DefaultTableModel tableModel;
    private final VendasCtrl controller;
    
    public TelaListaVendas(Usuario usuarioAutenticado) {
        this.controller = new VendasCtrl();
        this.usuarioAutenticado = usuarioAutenticado;
        initComponents();
        permissoes(usuarioAutenticado);
        configurarTabela();
        carregarDados();
        
        addWindowListener(new WindowAdapter (){
            @Override
            public void windowClosing(WindowEvent e){
                int opcao = JOptionPane.showConfirmDialog(null, "Deseja voltar para o menu principal?", "Voltar", JOptionPane.YES_NO_OPTION);
                
                if (opcao == JOptionPane.YES_OPTION){
                    MenuPrincipal menuPrincipal = new MenuPrincipal(usuarioAutenticado);
                    menuPrincipal.setVisible(true);
                    dispose();
                }
            }
        });
    }
    
    private void permissoes(Usuario usuarioAutenticado) {
        switch (usuarioAutenticado.getTipoUsuario()) {
            case "Securitário":
                btnEditarRegistro.setEnabled(false);
                btnRemoverRegistro.setEnabled(false);
                break;
            case "Gerente":
                btnEditarRegistro.setEnabled(true);
                btnRemoverRegistro.setEnabled(true);
                break;
        }
    }
    
    private void configurarTabela() {
        tableModel = new DefaultTableModel(
            new Object[]{"ID", "Cliente", "CPF", "Data da Venda", "Tipo de Seguro", "Valor", "Fiel"}, 0){
                @Override
                public Class<?> getColumnClass(int columnIndex){
                    return switch(columnIndex){
                        case 0 -> Integer.class;
                        case 4 -> String.class;
                        case 5 -> double.class;
                        case 6 -> boolean.class;
                        default -> String.class;
                    };
                }
            };
        jTable1.setModel(tableModel);
    }
    
    private void carregarDados() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        controller.listarVendas().forEach(venda -> {model.addRow(new Object[]{
            venda.getId(),
            venda.getNomeCliente(),
            venda.getCpfCliente(),
            venda.getDataVenda(),
            venda.getTipoSeguro(),
            String.format("R$ %.2f", venda.getValorApolice()),
            venda.isFiel() ? "Sim" : "Não"
            });
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnEditarRegistro = new javax.swing.JButton();
        btnRemoverRegistro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Lista de Vendas");

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnEditarRegistro.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnEditarRegistro.setText("Editar Registro");
        btnEditarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarRegistroActionPerformed(evt);
            }
        });

        btnRemoverRegistro.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnRemoverRegistro.setText("Remover Registro");
        btnRemoverRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverRegistroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(83, 83, 83)
                .addComponent(btnVoltar)
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(btnEditarRegistro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(btnRemoverRegistro)
                .addGap(60, 60, 60))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnVoltar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditarRegistro)
                    .addComponent(btnRemoverRegistro))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 400));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarRegistroActionPerformed
        int linha = jTable1.getSelectedRow();
        
        if(linha == -1){
            JOptionPane.showMessageDialog(
                    this, 
                    "Selecione um registro para editar.", 
                    "Atenção", 
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try{
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            Integer id = (Integer) model.getValueAt(linha, 0);
            
            RegistroDTO registro = controller.buscarVendaId(id);
            
            new TelaRegistro(usuarioAutenticado, registro).setVisible(true);
            dispose();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(
                    this, 
                    "Ocorreu um erro: " + e.getMessage(), 
                    "Erro", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarRegistroActionPerformed

    private void btnRemoverRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverRegistroActionPerformed
        int linha = jTable1.getSelectedRow();
        if(linha == -1){
            JOptionPane.showMessageDialog(
                    this, 
                    "Selecione um registro para remover.", 
                    "Atenção", 
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try{
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            Integer id = (Integer) model.getValueAt(linha, 0);
            String nomeCliente = (String) model.getValueAt(linha, 1);
            
            int confirmacao = JOptionPane.showConfirmDialog(
                    this, 
                    "Confirmar exclusão do registro:\n" + 
                    "Cliente: " + nomeCliente + "\n" +
                    "ID: " + id, 
                    "Confirmar Exclusão", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.WARNING_MESSAGE);
            
            if(confirmacao == JOptionPane.YES_OPTION){
                controller.excluirVenda(id);
                carregarDados();
                JOptionPane.showMessageDialog(
                        this, 
                        "Registro excluído com sucesso.", 
                        "Sucesso", 
                        JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(
                    this, 
                    "Ocorreu um erro: " + e.getMessage(), 
                    "Erro", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverRegistroActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        int opcao = JOptionPane.showConfirmDialog(null, "Deseja voltar para o menu principal", "Voltar", JOptionPane.YES_NO_OPTION);
        if (opcao == JOptionPane.YES_OPTION){
            MenuPrincipal menuPrincipal = new MenuPrincipal(usuarioAutenticado);
            menuPrincipal.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btnVoltarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditarRegistro;
    private javax.swing.JButton btnRemoverRegistro;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
